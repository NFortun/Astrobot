// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "Astrobot",
    "version": "0.0.1"
  },
  "paths": {
    "/imageoftheday": {
      "get": {
        "summary": "Get the astrobin image of the day",
        "operationId": "GetImageOfTheDay",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImageResponse"
            }
          },
          "default": {
            "description": "default error message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "summary": "Get images",
        "operationId": "GetImages",
        "parameters": [
          {
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImagesResponse"
            }
          },
          "default": {
            "description": "default error message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ImageResponse": {
      "type": "object",
      "required": [
        "description",
        "title",
        "url",
        "user"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "ImagesResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImageResponse"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "Astrobot",
    "version": "0.0.1"
  },
  "paths": {
    "/imageoftheday": {
      "get": {
        "summary": "Get the astrobin image of the day",
        "operationId": "GetImageOfTheDay",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImageResponse"
            }
          },
          "default": {
            "description": "default error message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "summary": "Get images",
        "operationId": "GetImages",
        "parameters": [
          {
            "type": "string",
            "name": "user",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImagesResponse"
            }
          },
          "default": {
            "description": "default error message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ImageResponse": {
      "type": "object",
      "required": [
        "description",
        "title",
        "url",
        "user"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "ImagesResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImageResponse"
      }
    }
  }
}`))
}
